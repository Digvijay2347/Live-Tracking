<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="/css/login.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    
</head>
<body>
    <video autoplay muted loop id="video-background">
        <source src="/rst.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>
    <h1 id="live-loc">Live Location Tracking</h1>
    <div class="overlay"></div>
    <button style="color: white;" class="dark-mode-toggle" id="darkModeToggle">
        <i class="fas fa-moon"></i>
    </button>
    <div class="container">
        <div class="login-box">
            <h1>Welcome Back</h1>
            <form id="login-form" action="/login" method="POST">
                <div class="form-group">
                    <label for="username">Username or Email</label>
                    <input type="text" id="username" name="username" required autocomplete="username" placeholder="Enter your username or email">
                    <div class="error-message" id="username-error"></div>
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <div class="password-toggle">
                        <input type="password" id="password" name="password" required autocomplete="current-password" placeholder="Enter your password">
                        <i class="fas fa-eye-slash" id="password-toggle"></i>
                    </div>
                    <div class="password-strength" id="password-strength"></div>
                    <div class="error-message" id="password-error"></div>
                </div>
                <div class="form-group">
                    <label class="custom-checkbox">
                        <input type="checkbox" id="remember-me" name="remember-me">
                        <span class="checkmark"></span>
                        Remember me
                    </label>
                </div>
                <div class="btn-container">
                    <button type="submit" class="btn btn-primary">Log In</button>
                    <a href="/auth/google" class="btn btn-google">
                        <i class="fab fa-google"></i> Continue with Google
                    </a>
                </div>
            </form>
            <p class="signup-link">Don't have an account? <a href="/signup">Sign up</a></p>
            <button class="btn details-btn">Details</button>
        </div>
        <div class="contact-id">
            <h1>&copy; Digvijay Singh</h1>
            <ul>
                <li><a href="mailto:contact@example.com">singhdigvijay.work@gmail.com</a></li>
                <li><a href="https://github.com/Digvijay2347" target="_blank">Github</a></li>
            </ul>
            <button class="close-btn">&times;</button>
        </div>
    </div>
    

    <script>
         if (document.cookie.includes('jwt')) {
            window.location.href = '/'; // Redirect if already logged in
        }
        const passwordToggle = document.getElementById('password-toggle');
        const passwordInput = document.getElementById('password');
        const loginForm = document.getElementById('login-form');
        const passwordError = document.getElementById('password-error');
        const usernameError = document.getElementById('username-error');
        const passwordStrength = document.getElementById('password-strength');
        const darkModeToggle = document.getElementById('darkModeToggle');
        const html = document.documentElement;

        passwordToggle.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.classList.toggle('fa-eye');
            this.classList.toggle('fa-eye-slash');
        });

        function showError(element, message) {
            element.textContent = message;
            element.classList.add('show');
        }

        function hideError(element) {
            element.textContent = '';
            element.classList.remove('show');
        }

        function validateUsername(username) {
            return username.length >= 3;
        }

        function validatePassword(password) {
            return password.length >= 8;
        }

        function checkPasswordStrength(password) {
            const strength = {
                1: 'Very Weak',
                2: 'Weak',
                3: 'Medium',
                4: 'Strong',
                5: 'Very Strong'
            };
            let score = 0;
            if (password.length > 6) score++;
            if (password.length > 10) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^A-Za-z0-9]/.test(password)) score++;

            passwordStrength.style.width = `${(score / 5) * 100}%`;
            passwordStrength.style.backgroundColor = 
                score < 2 ? 'var(--error-color)' :
                score < 4 ? 'var(--warning-color)' : 'var(--success-color)';
            
            return strength[score] || 'Very Weak';
        }

        passwordInput.addEventListener('input', function() {
            const strength = checkPasswordStrength(this.value);
            if (validatePassword(this.value)) {
                hideError(passwordError);
            } else {
                showError(passwordError, 'Password must be at least 8 characters long');
            }
        });

        loginForm.addEventListener('submit', function(e) {
            let isValid = true;

            if (!validateUsername(username.value)) {
                showError(usernameError, 'Username must be at least 3 characters long');
                isValid = false;
            } else {
                hideError(usernameError);
            }

            if (!validatePassword(passwordInput.value)) {
                showError(passwordError, 'Password must be at least 8 characters long');
                isValid = false;
            } else {
                hideError(passwordError);
            }

            if (!isValid) {
                e.preventDefault();
            }
        });

        function toggleDarkMode() {
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateDarkModeToggle(newTheme);
        }

        function updateDarkModeToggle(theme) {
            darkModeToggle.innerHTML = theme === 'light' 
                ? '<i class="fas fa-moon"></i>' 
                : '<i class="fas fa-sun"></i>';
        }

        darkModeToggle.addEventListener('click', toggleDarkMode);

        // Check for saved theme preference or prefer-color-scheme
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme) {
            html.setAttribute('data-theme', savedTheme);
            updateDarkModeToggle(savedTheme);
        } else if (prefersDark) {
            html.setAttribute('data-theme', 'dark');
            updateDarkModeToggle('dark');
        }

        const detailsBtn = document.querySelector('.details-btn');
const contactId = document.querySelector('.contact-id');

detailsBtn.addEventListener('click', () => {
    contactId.style.left = '0px';
    contactId.style.zIndex = '1'; /* bring it to the front */
});

contactId.addEventListener('click', (e) => {
    if (e.target === contactId) {
        contactId.style.left = '-300px';
        contactId.style.zIndex = '-1'; /* move it back behind the login box */
    }
});

const closeBtn = document.querySelector('.close-btn');
const contactID = document.querySelector('.contact-id');
const detailsBtN = document.querySelector('.details-btn'); // assuming this is the class of the "Details" button

closeBtn.addEventListener('click', () => {
    contactID.style.display = 'none';
});

detailsBtn.addEventListener('click', () => {
    contactID.style.display = 'block';
});

    </script>
</body>
</html>
